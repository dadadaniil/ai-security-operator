from exploiter.strategies.attack_strategy import IAttackStrategy
from typing import Type, Dict

class AttackStrategyFactory:
    def __init__(self):
        self._strategy_registry: Dict[str, Type[IAttackStrategy]] = {}

    def register_strategy(self, tool_name: str, strategy_class: Type[IAttackStrategy]):
        self._strategy_registry[tool_name] = strategy_class

    def get_strategy(self, tool_name: str) -> IAttackStrategy:
        strategy_class = self._strategy_registry.get(tool_name)
        if not strategy_class:
            raise ValueError(f"No strategy registered for tool: {tool_name}")
        return strategy_class() 